/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:

    void DFS(TreeNode* root, vector<int>& out){
        if(root==NULL){
            return;
        }
        cout<<"pushing : "<<root->val<<endl;
        out.push_back(root->val);
        if(root->right==NULL){
            return DFS(root->left, out);
        }
        return DFS(root->right,out);
    }

    vector<int> rightSideView(TreeNode* root) {

        vector<int>out;
        if(root==NULL){
            return out;
        }
        DFS(root,out);
        return out;
    }
};